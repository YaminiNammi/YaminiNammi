{"ast":null,"code":"var _jsxFileName = \"/Users/nammiy/React Practise/Udemy Practise/src/Components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport './Expenses.css';\nimport { useState } from 'react';\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from '../../Container/Card';\nimport ExpenseFilter from '../ExpenseFilter/ExpenseFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => expense.date.getFullYear().toString() === filteredYear);\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpenses.length) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this));\n  } //Instead of terinary operator for if condition we can use && \n  // {filteredExpenses.length && <p>No Expenses Found</p>}\n  // {filteredExpenses.length &&\n  //     filteredExpenses.map(expense => \n  //         <ExpenseItem \n  //         key={expense.id}\n  //         title={expense.title} \n  //         amount={expense.amount} \n  //         date={expense.date}/>\n  //     )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"expensesContent\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"Mc+NeR06clC/ISYiaZXb0Ie4vks=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/nammiy/React Practise/Udemy Practise/src/Components/Expenses/Expenses.js"],"names":["useState","ExpenseItem","Card","ExpenseFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAxE,CAAzB;;AAEA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AACA,MAAGP,gBAAgB,CAACQ,MAApB,EAA2B;AACvBD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAqBN,OAAO,iBAC1C,QAAC,WAAD;AAEA,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFf;AAGA,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHhB;AAIA,MAAA,IAAI,EAAER,OAAO,CAACC;AAJd,OACKD,OAAO,CAACS,EADb;AAAA;AAAA;AAAA;AAAA,YADc,CAAlB;AAOH,GAlBuB,CAoBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEhB,YAAzB;AAAuC,MAAA,cAAc,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtCD;;GAAMJ,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import './Expenses.css';\nimport { useState } from 'react';\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from '../../Container/Card';\nimport ExpenseFilter from '../ExpenseFilter/ExpenseFilter';\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState('2021');\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    };\n\n    const filteredExpenses = props.items.filter(expense => expense.date.getFullYear().toString() === filteredYear);\n\n    let expensesContent = <p>No Expenses Found</p>;\n    if(filteredExpenses.length){\n        expensesContent = filteredExpenses.map(expense => \n            <ExpenseItem \n            key={expense.id}\n            title={expense.title} \n            amount={expense.amount} \n            date={expense.date}/>\n        )\n    }\n\n    //Instead of terinary operator for if condition we can use && \n    // {filteredExpenses.length && <p>No Expenses Found</p>}\n    // {filteredExpenses.length &&\n    //     filteredExpenses.map(expense => \n    //         <ExpenseItem \n    //         key={expense.id}\n    //         title={expense.title} \n    //         amount={expense.amount} \n    //         date={expense.date}/>\n    //     )\n    // }\n    return(\n        <Card className=\"expenses\">\n            <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}></ExpenseFilter>\n            expensesContent\n        </Card>\n    );\n\n}\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}